{"version":3,"sources":["components/CountryCard/styles.js","components/CardInfo/index.jsx","helpers/formatPopulation.js","components/CountryCard/index.jsx","components/CountryGrid/styles.js","components/CountryGrid/index.jsx","components/RegionOption/index.jsx","css/components.js","components/RegionFilter/styles.js","context/types.js","components/RegionFilter/index.jsx","components/SearchBar/styles.js","components/SearchBar/index.jsx","context/CountriesContext.js","pages/home/HomeScreen.jsx","components/DetailedCountryCard/styles.js","components/BorderCountries/styles.js","components/BorderCountries/index.jsx","helpers/getBorderCountries.js","components/DetailedCountryCard/index.jsx","pages/detail/styles.js","pages/detail/DetailScreen.jsx","helpers/getCountryByName.js","components/Header/styles.js","components/Header/index.jsx","routers/AppRouter.jsx","css/globalStyles.js","css/themes.js","context/countriesActions.js","context/countriesReducer.js","App.jsx","hooks/useDarkMode.js","index.js"],"names":["Card","styled","article","theme","elements","CardContent","div","StyledLink","Link","input","CardInfo","title","data","formatPopulation","pop","Intl","NumberFormat","format","CountryCard","flag","name","population","region","capital","to","src","alt","Grid","section","CountryGrid","countries","map","country","RegionOption","value","attr","FlexWrapper","Container","Border","Controller","text","background","BorderedBox","css","SelectBorder","Select","types","RegionFilter","dispatch","as","onChange","regionSelected","target","type","payload","disabled","defaultValue","Section","InputBorder","Input","Mover","SearchBar","memo","useState","search","setSearch","Provider","size","autoComplete","placeholder","CountriesContext","createContext","HomeScreen","useContext","countriesToShow","useEffect","a","fetch","res","json","Flag","img","DetailContainer","Title","h1","CardContentContainer","CardContentWrapper","CountryContainer","LinkBox","BorderCountries","borders","border","countryName","find","alpha3Code","getBorderCountryName","DetailedCountryCard","nativeName","subregion","topLevelDomain","currencies","languages","mr","reduce","acc","length","Button","button","DetailScreen","_name","history","useParams","countryToShow","countriesList","onClick","goBack","StyledHeader","header","Navigation","nav","NavigationWrapper","Span","span","Header","changeTheme","AppRouter","handleThemeChange","exact","path","component","GlobalStyles","createGlobalStyle","lightTheme","darkTheme","getMatchedCountries","state","filter","toLowerCase","includes","filterByRegion","countriesReducer","initialState","App","useReducer","isDarkModeEnabled","localStorage","getItem","setTheme","setItem","useDarkMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268dd49a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Card = styled.article`\r\n  max-width: 18.75rem;\r\n  min-height: 25rem;\r\n  border-radius: 0.35rem;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\r\n  overflow: hidden;\r\n  transition: background-color 350ms ease-out;\r\n\r\n  p {\r\n    margin: 0.5rem 0;\r\n  }\r\n\r\n  h3 {\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.elements};\r\n  }\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 1.5rem 1rem;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  transition: color 350ms ease-in;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.input};\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const CardInfo = ({ title, data }) => (\r\n  <p>\r\n    <b>{title}:</b> {data}\r\n  </p>\r\n);\r\n","export const formatPopulation = (pop) =>\r\n  new Intl.NumberFormat(\"locale\").format(pop);\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, StyledLink } from \"./styles\";\r\n\r\nimport { CardInfo } from \"../CardInfo\";\r\n\r\nimport { formatPopulation } from \"../../helpers/formatPopulation\";\r\n\r\nexport const CountryCard = ({ flag, name, population, region, capital }) => (\r\n  <Card>\r\n    <StyledLink to={`/detail/${name}`}>\r\n      <img src={flag} alt={name} />\r\n\r\n      <CardContent>\r\n        <h3>{name}</h3>\r\n\r\n        <CardInfo title=\"Population\" data={formatPopulation(population)} />\r\n        <CardInfo title=\"Region\" data={region} />\r\n        <CardInfo title=\"Capital\" data={capital} />\r\n      </CardContent>\r\n    </StyledLink>\r\n  </Card>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-items: center;\r\n  grid-gap: 2rem 1rem;\r\n\r\n  @media (min-width: 64rem) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  @media (min-width: 47.5rem) and (max-width: 64rem) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (min-width: 31.25rem) and (max-width: 47.5rem) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CountryCard } from \"../CountryCard\";\r\n\r\nimport { Grid } from \"./styles\";\r\n\r\nexport const CountryGrid = ({ countries }) => (\r\n  <Grid>\r\n    {countries.map((country) => (\r\n      <CountryCard key={country.name} {...country} />\r\n    ))}\r\n  </Grid>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const RegionOption = ({ value, ...attr }) => (\r\n  <option {...attr} value={value}>\r\n    {value}\r\n  </option>\r\n);\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const FlexWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 2rem 0;\r\n\r\n  @media (min-width: 64rem) {\r\n    margin: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const Border = styled.div`\r\n  padding: 0.35rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.elements};\r\n`;\r\n\r\nexport const Controller = styled.input`\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n`;\r\n\r\nexport const BorderedBox = css`\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  padding: 0.5rem 1rem;\r\n  min-width: 100px;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\r\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n  transition: background-color 350ms ease-in;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.elements};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.input};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const SelectBorder = styled(Border)`\r\n  max-width: 9.5rem;\r\n  padding: 0.2rem;\r\n\r\n  @media (min-width: 40rem) {\r\n    max-width: 15rem;\r\n  }\r\n`;\r\n\r\nexport const Select = styled(Controller)`\r\n  cursor: pointer;\r\n  appearance: none;\r\n  line-height: 1.2;\r\n  padding: 0.75rem;\r\n`;\r\n","export const types = {\r\n  setCountryList: \"set country list\",\r\n  setSearchCountry: \"set cearch Country\",\r\n  setRegion: \"set region\",\r\n};\r\n","import React from \"react\";\r\n\r\nimport { RegionOption } from \"../RegionOption\";\r\n\r\nimport { Container } from \"../../css/components\";\r\nimport { SelectBorder, Select } from \"./styles\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const RegionFilter = ({ dispatch }) => {\r\n  const handleChange = ({ target }) => {\r\n    const regionSelected = target.value;\r\n\r\n    dispatch({\r\n      type: types.setRegion,\r\n      payload: { regionSelected },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SelectBorder>\r\n        <Select as=\"select\" onChange={handleChange}>\r\n          <option disabled defaultValue>\r\n            Filter by Region\r\n          </option>\r\n\r\n          <RegionOption value=\"Africa\" />\r\n\r\n          <RegionOption value=\"Americas\" />\r\n\r\n          <RegionOption value=\"Asia\" />\r\n\r\n          <RegionOption value=\"Europe\" />\r\n\r\n          <RegionOption value=\"Oceania\" />\r\n        </Select>\r\n      </SelectBorder>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const InputBorder = styled(Border)`\r\n  @media (min-width: 40rem) {\r\n    max-width: 25rem;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Controller)`\r\n  padding: 1rem 0 1rem 3.5rem;\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nexport const Mover = styled.div`\r\n  position: absolute;\r\n  top: 1.25rem;\r\n  left: 1.5rem;\r\n`;\r\n","import React, { memo, useState } from \"react\";\r\n\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { HiSearch } from \"react-icons/hi\";\r\n\r\nimport { Section, Input, Mover, InputBorder } from \"./styles\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const SearchBar = memo(({ dispatch }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearch(target.value);\r\n\r\n    dispatch({\r\n      type: types.setSearchCountry,\r\n      payload: { search },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Mover>\r\n        <IconContext.Provider value={{ size: \"1.3rem\" }}>\r\n          <HiSearch />\r\n        </IconContext.Provider>\r\n      </Mover>\r\n\r\n      <InputBorder>\r\n        <Input\r\n          autoComplete=\"no\"\r\n          placeholder=\"Search for a country...\"\r\n          value={search}\r\n          onChange={handleChange}\r\n        />\r\n      </InputBorder>\r\n    </Section>\r\n  );\r\n});\r\n","import { createContext } from \"react\";\r\n\r\nexport const CountriesContext = createContext();\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { CountryGrid } from \"../../components/CountryGrid\";\r\nimport { RegionFilter } from \"../../components/RegionFilter\";\r\nimport { SearchBar } from \"../../components/SearchBar\";\r\n\r\nimport { CountriesContext } from \"../../context/CountriesContext\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const HomeScreen = () => {\r\n  const {\r\n    countries: { countriesToShow },\r\n    dispatch,\r\n  } = useContext(CountriesContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({\r\n        type: types.setCountryList,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar dispatch={dispatch} />\r\n      <RegionFilter dispatch={dispatch} />\r\n\r\n      <CountryGrid countries={countriesToShow} />\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Container } from \"../../css/components\";\r\n\r\nexport const Flag = styled.img`\r\n  border-radius: 0.2rem;\r\n  margin-bottom: 1rem;\r\n\r\n  @media (min-width: 62.5rem) {\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\nexport const DetailContainer = styled.div`\r\n  margin: 1rem 0;\r\n\r\n  @media (min-width: 62.5rem) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const Card = styled.article`\r\n  @media (min-width: 62.5rem) {\r\n    margin-left: 8rem;\r\n  }\r\n`;\r\n\r\nexport const CardContentContainer = styled(Container)`\r\n  & > * {\r\n    margin: 0.5rem 0;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  b {\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media (min-width: 62.5rem) and (max-width: 75rem) {\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  @media (min-width: 75rem) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const CardContentWrapper = styled(Container)`\r\n  @media (min-width: 75rem) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width: 34.375rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { BorderedBox } from \"../../css/components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CountryContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const LinkBox = styled(Link)`\r\n  margin: 1rem 0.5rem;\r\n  text-align: center;\r\n  ${BorderedBox}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { getBorderCountryName } from \"../../helpers/getBorderCountries\";\r\n\r\nimport { LinkBox, CountryContainer } from \"./styles\";\r\n\r\nexport const BorderCountries = ({ borders, countries }) => {\r\n  return (\r\n    <CountryContainer>\r\n      {borders.map((border) => {\r\n        const countryName = getBorderCountryName(countries, border);\r\n        return (\r\n          <LinkBox key={border} to={`/detail/${countryName}`}>\r\n            <span>{countryName}</span>\r\n          </LinkBox>\r\n        );\r\n      })}\r\n    </CountryContainer>\r\n  );\r\n};\r\n","export const getBorderCountryName = (countries, border) =>\r\n  countries.find(({ alpha3Code }) => alpha3Code === border).name;\r\n\r\n","import React from \"react\";\r\n\r\nimport {\r\n  DetailContainer,\r\n  CardContentContainer,\r\n  Flag,\r\n  CardContentWrapper,\r\n  Card,\r\n  Title,\r\n} from \"./styles\";\r\n\r\nimport { CardInfo } from \"../CardInfo\";\r\nimport { BorderCountries } from \"../BorderCountries\";\r\n\r\nimport { formatPopulation } from \"../../helpers/formatPopulation\";\r\n\r\nexport const DetailedCountryCard = ({\r\n  name,\r\n  flag,\r\n  population,\r\n  region,\r\n  capital,\r\n  nativeName,\r\n  subregion,\r\n  topLevelDomain,\r\n  currencies,\r\n  languages,\r\n  borders,\r\n  countries,\r\n}) => {\r\n  return (\r\n    <section>\r\n      <DetailContainer>\r\n        <Flag src={flag} alt={`${name} flag`} />\r\n        <Card>\r\n          <Title>{name}</Title>\r\n          <CardContentWrapper>\r\n            <CardContentContainer mr>\r\n              <CardInfo title=\"Native Name\" data={nativeName} />\r\n\r\n              <CardInfo\r\n                title=\"Population\"\r\n                data={formatPopulation(population)}\r\n              />\r\n\r\n              <CardInfo title=\"Region\" data={region} />\r\n\r\n              <CardInfo title=\"Subregion\" data={subregion} />\r\n\r\n              <CardInfo title=\"Capital\" data={capital} />\r\n            </CardContentContainer>\r\n\r\n            <CardContentContainer>\r\n              <CardInfo title=\"Top Level Domain\" data={topLevelDomain} />\r\n\r\n              <CardInfo\r\n                title=\"Currencies\"\r\n                data={currencies.reduce((acc, { name }) => acc + name, \"\")}\r\n              />\r\n\r\n              <CardInfo\r\n                title=\"Languages\"\r\n                data={languages.reduce((acc, { name }) => acc + ` ${name}`, \"\")}\r\n              />\r\n            </CardContentContainer>\r\n          </CardContentWrapper>\r\n\r\n          {borders.length > 0 ? (\r\n            <div>\r\n              <h3>Border Countries</h3>\r\n              <BorderCountries borders={borders} countries={countries} />\r\n            </div>\r\n          ) : null}\r\n        </Card>\r\n      </DetailContainer>\r\n    </section>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { BorderedBox } from \"../../css/components\";\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n\r\n  ${BorderedBox};\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { DetailedCountryCard } from \"../../components/DetailedCountryCard\";\r\n\r\nimport { CountriesContext } from \"../../context/CountriesContext\";\r\nimport { getCountryByName } from \"../../helpers/getCountryByName\";\r\n\r\nimport { Container } from \"../../css/components\";\r\nimport { Button } from \"./styles\";\r\n\r\nexport const DetailScreen = ({ history }) => {\r\n  const { countries } = useContext(CountriesContext);\r\n  const { countryName } = useParams();\r\n\r\n  const countryToShow = getCountryByName(countryName, countries.countriesList);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Button as=\"button\" onClick={() => history.goBack()}>\r\n          &#8592; Back\r\n        </Button>\r\n      </Container>\r\n\r\n      <DetailedCountryCard\r\n        {...countryToShow}\r\n        history={history}\r\n        countries={countries.countriesList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const getCountryByName = (_name, countriesList) =>\r\n  countriesList.find(({ name }) => name === _name);\r\n","import styled from \"styled-components\";\r\n\r\nimport { FlexWrapper } from \"../../css/components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  padding: 0.75rem;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n\r\n  @media (min-width: 40rem) {\r\n    padding: 1.5rem 3rem;\r\n  }\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavigationWrapper = styled(FlexWrapper)`\r\n  align-items: center;\r\n  & * {\r\n    margin: 0 0.35rem;\r\n  }\r\n\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: 62.5rem) {\r\n    & * {\r\n      margin: 0 0.75rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 21rem) {\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-weight: 600;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledHeader, Navigation, NavigationWrapper, Span } from \"./styles\";\r\n\r\nimport { FiMoon, FiSun } from \"react-icons/fi\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nexport const Header = ({ changeTheme, theme }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <Navigation>\r\n        <h2>\r\n          <Link to=\"/\">Where in the World?</Link>\r\n        </h2>\r\n\r\n        <NavigationWrapper>\r\n          <IconContext.Provider value={{ size: \"1.2rem\" }}>\r\n            {theme ? (\r\n              <FiMoon onClick={changeTheme} />\r\n            ) : (\r\n              <FiSun onClick={changeTheme} />\r\n            )}\r\n          </IconContext.Provider>\r\n\r\n          <Span>{theme ? \"Dark mode\" : \"Light mode\"}</Span>\r\n        </NavigationWrapper>\r\n      </Navigation>\r\n    </StyledHeader>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { HomeScreen } from \"../pages/home/HomeScreen\";\r\nimport { DetailScreen } from \"../pages/detail/DetailScreen\";\r\nimport { Header } from \"../components/Header\";\r\n\r\nexport const AppRouter = ({ theme, handleThemeChange }) => {\r\n  return (\r\n    <Router>\r\n      <Header theme={theme} changeTheme={handleThemeChange} />\r\n\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/detail/:countryName\" component={DetailScreen} />\r\n\r\n          <Route path=\"/\" component={HomeScreen} />\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-size: 14px;\r\n    height: 100%;\r\n    font-family: 'Nunito Sans', sans-serif;\r\n    transition: all 0.35s linear;\r\n    \r\n    background-color: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n\r\nmain{\r\n    margin: 1rem;\r\n\r\n    @media (min-width: 64rem){\r\n        margin: 2rem 3rem;\r\n    }\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n}\r\n\r\nimg{\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\n`\r\n","export const lightTheme = {\r\n  text: \"#111517\",\r\n  input: \"#858585\",\r\n  background: \"#fafafa\",\r\n  elements: \"#ffffff\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  text: \"#ffffff\",\r\n  input: \"#858585\",\r\n  background: \"#202c37\",\r\n  elements: \"#2b3945\",\r\n};\r\n","export const getMatchedCountries = (state, payload) =>\r\n  state.countriesList.filter(({ name }) =>\r\n    name.toLowerCase().includes(payload.search.toLowerCase())\r\n  );\r\n\r\nexport const filterByRegion = (state, payload) =>\r\n  state.countriesList.filter(({ region }) => region === payload.regionSelected);\r\n","import { types } from \"./types\";\r\n\r\nimport { filterByRegion, getMatchedCountries } from \"./countriesActions\";\r\n\r\nexport const countriesReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case types.setCountryList:\r\n      return { ...state, countriesList: payload, countriesToShow: payload };\r\n\r\n    case types.setRegion:\r\n      return { ...state, countriesToShow: filterByRegion(state, payload) };\r\n\r\n    case types.setSearchCountry:\r\n      return { ...state, countriesToShow: getMatchedCountries(state, payload) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./css/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"./css/themes\";\r\n\r\nimport { useDarkMode } from \"./hooks/useDarkMode\";\r\n\r\nimport { countriesReducer } from \"./context/countriesReducer\";\r\nimport { CountriesContext } from \"./context/CountriesContext\";\r\n\r\nconst initialState = {\r\n  countriesList: [],\r\n  countriesToShow: [],\r\n};\r\n\r\nexport const App = () => {\r\n  const [countries, dispatch] = useReducer(countriesReducer, initialState);\r\n\r\n  const { theme, handleThemeChange } = useDarkMode();\r\n\r\n  return (\r\n    <CountriesContext.Provider value={{ countries, dispatch }}>\r\n      <ThemeProvider theme={theme ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n\r\n        <AppRouter theme={theme} handleThemeChange={handleThemeChange} />\r\n      </ThemeProvider>\r\n    </CountriesContext.Provider>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const isDarkModeEnabled =\r\n    localStorage.getItem(\"theme\") === \"false\" ? false : true;\r\n\r\n  const [theme, setTheme] = useState(isDarkModeEnabled);\r\n\r\n  const handleThemeChange = () => setTheme(!theme);\r\n\r\n  useEffect(() => localStorage.setItem(\"theme\", theme), [theme]);\r\n\r\n  return {\r\n    theme,\r\n    handleThemeChange,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
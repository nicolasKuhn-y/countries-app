{"version":3,"sources":["components/CountryCard/styles.js","components/CardInfo/index.jsx","components/CountryCard/index.jsx","components/CountryGrid/styles.js","components/CountryGrid/index.jsx","components/RegionOption/index.jsx","css/components.js","components/RegionFilter/styles.js","context/types.js","components/RegionFilter/index.jsx","components/SearchBar/styles.js","components/SearchBar/index.jsx","context/CountriesContext.js","pages/home/HomeScreen.jsx","components/DetailedCountryCard/styles.js","components/DetailedCountryCard/index.jsx","pages/detail/DetailScreen.jsx","helpers/getCountryByName.js","components/Header/styles.js","components/Header/index.jsx","routers/AppRouter.jsx","css/globalStyles.js","css/themes.js","context/countriesActions.js","context/countriesReducer.js","App.jsx","hooks/useDarkMode.js","index.js"],"names":["Card","styled","article","theme","elements","CardContent","div","StyledLink","Link","input","CardInfo","title","data","CountryCard","flag","name","population","region","capital","to","src","alt","Grid","section","CountryGrid","countries","map","country","RegionOption","value","attr","FlexWrapper","Container","Border","Controller","text","background","SelectBorder","Select","types","RegionFilter","dispatch","as","onChange","regionSelected","target","type","payload","disabled","defaultValue","Section","InputBorder","Input","Mover","SearchBar","memo","useState","search","setSearch","Provider","size","autoComplete","placeholder","CountriesContext","createContext","HomeScreen","useContext","countriesToShow","useEffect","a","fetch","res","json","console","log","Flag","img","Button","button","FlexContainer","Container2","DetailedCountryCard","nativeName","subregion","topLevelDomain","currencies","languages","history","borders","formattedCurrencie","reduce","acc","formattedLanguages","onClick","goBack","DetailScreen","_name","countryName","useParams","countryToShow","countriesList","find","StyledHeader","header","Navigation","nav","NavigationWrapper","Span","span","Header","changeTheme","AppRouter","handleThemeChange","exact","path","component","GlobalStyles","createGlobalStyle","lightTheme","darkTheme","getMatchedCountries","state","filter","toLowerCase","includes","filterByRegion","countriesReducer","initialState","App","useReducer","isDarkModeEnabled","localStorage","getItem","setTheme","setItem","useDarkMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.034da5dc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Card = styled.article`\r\n  max-width: 18.75rem;\r\n  min-height: 25rem;\r\n  border-radius: 0.35rem;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\r\n  overflow: hidden;\r\n  transition: background-color 350ms ease-out;\r\n\r\n  p {\r\n    margin: 0.5rem 0;\r\n  }\r\n\r\n  h3 {\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.elements};\r\n  }\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 1.5rem 1rem;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  transition: color 350ms ease-in;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.input};\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const CardInfo = ({ title, data }) => (\r\n  <p>\r\n    <b>{title}:</b> {data}\r\n  </p>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, StyledLink } from \"./styles\";\r\n\r\nimport { CardInfo } from \"../CardInfo\";\r\n\r\nexport const CountryCard = ({ flag, name, population, region, capital }) => {\r\n  return (\r\n    <Card>\r\n      <StyledLink to={`/detail/${name}`}>\r\n        <img src={flag} alt={name} />\r\n\r\n        <CardContent>\r\n          <h3>{name}</h3>\r\n\r\n          <CardInfo title=\"Population\" data={population} />\r\n          <CardInfo title=\"Region\" data={region} />\r\n          <CardInfo title=\"Capital\" data={capital} />\r\n        </CardContent>\r\n      </StyledLink>\r\n    </Card>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 2rem 1rem;\r\n\r\n  @media (min-width: 64rem) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  @media (min-width: 47.5rem) and (max-width: 64rem) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (min-width: 31.25rem) and (max-width: 47.5rem) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CountryCard } from \"../CountryCard\";\r\n\r\nimport { Grid } from \"./styles\";\r\n\r\nexport const CountryGrid = ({ countries }) => (\r\n  <Grid>\r\n    {countries.map((country) => (\r\n      <CountryCard key={country.name} {...country} />\r\n    ))}\r\n  </Grid>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const RegionOption = ({ value, ...attr }) => (\r\n  <option {...attr} value={value}>\r\n    {value}\r\n  </option>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 2rem 0;\r\n\r\n  @media (min-width: 64rem) {\r\n    margin: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const Border = styled.div`\r\n  padding: 0.35rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.elements};\r\n`;\r\n\r\nexport const Controller = styled.input`\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const SelectBorder = styled(Border)`\r\n  max-width: 9.5rem;\r\n  padding: 0.2rem;\r\n\r\n  @media (min-width: 40rem) {\r\n    max-width: 15rem;\r\n  }\r\n`;\r\n\r\nexport const Select = styled(Controller)`\r\n  cursor: pointer;\r\n  appearance: none;\r\n  line-height: 1.2;\r\n  padding: 0.75rem;\r\n`;\r\n","export const types = {\r\n  setCountryList: \"set country list\",\r\n  setSearchCountry: \"set cearch Country\",\r\n  setRegion: \"set region\",\r\n};\r\n","import React from \"react\";\r\n\r\nimport { RegionOption } from \"../RegionOption\";\r\n\r\nimport { Container } from \"../../css/components\";\r\nimport { SelectBorder, Select } from \"./styles\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const RegionFilter = ({ dispatch }) => {\r\n  const handleChange = ({ target }) => {\r\n    const regionSelected = target.value;\r\n\r\n    dispatch({\r\n      type: types.setRegion,\r\n      payload: { regionSelected },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SelectBorder>\r\n        <Select as=\"select\" onChange={handleChange}>\r\n          <option disabled defaultValue>\r\n            Filter by Region\r\n          </option>\r\n\r\n          <RegionOption value=\"Africa\" />\r\n\r\n          <RegionOption value=\"Americas\" />\r\n\r\n          <RegionOption value=\"Asia\" />\r\n\r\n          <RegionOption value=\"Europe\" />\r\n\r\n          <RegionOption value=\"Oceania\" />\r\n        </Select>\r\n      </SelectBorder>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const InputBorder = styled(Border)`\r\n  @media (min-width: 40rem) {\r\n    max-width: 25rem;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Controller)`\r\n  padding: 1rem 0 1rem 3.5rem;\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nexport const Mover = styled.div`\r\n  position: absolute;\r\n  top: 1.25rem;\r\n  left: 1.5rem;\r\n`;\r\n","import React, { memo, useState } from \"react\";\r\n\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { HiSearch } from \"react-icons/hi\";\r\n\r\nimport { Section, Input, Mover, InputBorder } from \"./styles\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const SearchBar = memo(({ dispatch }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearch(target.value);\r\n\r\n    dispatch({\r\n      type: types.setSearchCountry,\r\n      payload: { search },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Mover>\r\n        <IconContext.Provider value={{ size: \"1.3rem\" }}>\r\n          <HiSearch />\r\n        </IconContext.Provider>\r\n      </Mover>\r\n\r\n      <InputBorder>\r\n        <Input\r\n          autoComplete=\"no\"\r\n          placeholder=\"Search for a country...\"\r\n          value={search}\r\n          onChange={handleChange}\r\n        />\r\n      </InputBorder>\r\n    </Section>\r\n  );\r\n});\r\n","import { createContext } from \"react\";\r\n\r\nexport const CountriesContext = createContext();\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { CountryGrid } from \"../../components/CountryGrid\";\r\nimport { RegionFilter } from \"../../components/RegionFilter\";\r\nimport { SearchBar } from \"../../components/SearchBar\";\r\n\r\nimport { CountriesContext } from \"../../context/CountriesContext\";\r\nimport { types } from \"../../context/types\";\r\n\r\nexport const HomeScreen = () => {\r\n  const {\r\n    countries: { countriesToShow },\r\n    dispatch,\r\n  } = useContext(CountriesContext);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({\r\n        type: types.setCountryList,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  console.log(countriesToShow);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar dispatch={dispatch} />\r\n      <RegionFilter dispatch={dispatch} />\r\n\r\n      <CountryGrid countries={countriesToShow} />\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Container } from \"../../css/components\";\r\n\r\n\r\n\r\nexport const Flag = styled.img`\r\n\r\n\r\n\r\n\r\n\r\n`\r\n\r\nexport const Card = styled.article`\r\n  margin: 1rem 0.5rem;\r\n\r\n  @media (min-width: 1024px){\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  padding: 0.5rem 1rem;\r\n  min-width: 100px;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\r\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.elements};\r\n`;\r\n\r\nexport const FlexContainer = styled(Container)`\r\n  & > * {\r\n    margin: 0.8rem 0;\r\n  }\r\n\r\n  b {\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const Container2 = styled(Container)`\r\n width: 60%\r\n`;\r\n\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../../css/components\";\r\n\r\nimport { Button, Card, FlexContainer, Flag, Container2 } from \"./styles\";\r\n\r\n\r\n\r\nexport const DetailedCountryCard = ({\r\n  name,\r\n  flag,\r\n  population,\r\n  region,\r\n  capital,\r\n  nativeName,\r\n  subregion,\r\n  topLevelDomain,\r\n  currencies,\r\n  languages,\r\n  borders,\r\n  history,\r\n}) => {\r\n  const handleBack = () => history.goBack();\r\n\r\n  const formattedCurrencie = currencies.reduce(\r\n    (acc, { name }) => acc + name,\r\n    \"\"\r\n  );\r\n\r\n  const formattedLanguages = languages.reduce(\r\n    (acc, { name }) => acc + \" \" + name,\r\n    \"\"\r\n  );\r\n\r\n  console.log(formattedLanguages);\r\n\r\n  return (\r\n    <section>\r\n      <Container>\r\n        <Button as=\"button\" onClick={handleBack}>\r\n          &#8592; Back\r\n        </Button>\r\n      </Container>\r\n      <Card>\r\n        <Flag src={flag} alt={`${name} flag`} />\r\n\r\n        <Container2>\r\n          <h2>{name}</h2>\r\n\r\n          <FlexContainer>\r\n            <p>\r\n              <b>Native Name</b>: {nativeName}{\" \"}\r\n            </p>\r\n            <p>\r\n              <b>Population</b>: {population}\r\n            </p>\r\n            <p>\r\n              <b>Region</b>: {region}\r\n            </p>\r\n            <p>\r\n              <b>Subregion</b>: {subregion}\r\n            </p>\r\n            <p>\r\n              <b>Capital</b>: {capital}\r\n            </p>\r\n          </FlexContainer>\r\n\r\n          <FlexContainer>\r\n            <p>\r\n              <b>Top Level Domain</b>: {topLevelDomain}\r\n            </p>\r\n            <p>\r\n              <b>Currencies</b>: {formattedCurrencie}\r\n            </p>\r\n            <p>\r\n              <b>Languages</b>: {formattedLanguages}\r\n            </p>\r\n          </FlexContainer>\r\n        </Container2>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DetailedCountryCard } from \"../../components/DetailedCountryCard\";\r\n\r\nimport { CountriesContext } from \"../../context/CountriesContext\";\r\nimport { getCountryByName } from \"../../helpers/getCountryByName\";\r\n\r\nexport const DetailScreen = ({ history }) => {\r\n  const { countries } = useContext(CountriesContext);\r\n  const { countryName } = useParams();\r\n\r\n  const countryToShow = getCountryByName(countryName, countries.countriesList);\r\n\r\n  return (\r\n    <div>\r\n      <DetailedCountryCard {...countryToShow} history={history} />\r\n    </div>\r\n  );\r\n};\r\n","export const getCountryByName = (_name, countriesList) =>\r\n  countriesList.find(({ name }) => name === _name);\r\n","import styled from \"styled-components\";\r\n\r\nimport { FlexWrapper } from \"../../css/components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  padding: 0.75rem;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n\r\n  @media (min-width: 40rem) {\r\n    padding: 1.5rem 3rem;\r\n  }\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavigationWrapper = styled(FlexWrapper)`\r\n  align-items: center;\r\n  & * {\r\n    margin: 0 0.35rem;\r\n  }\r\n\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: 62.5rem) {\r\n    & * {\r\n      margin: 0 0.75rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 21rem) {\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-weight: 600;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledHeader, Navigation, NavigationWrapper, Span } from \"./styles\";\r\n\r\nimport { FiMoon, FiSun } from \"react-icons/fi\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nexport const Header = ({ changeTheme, theme }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <Navigation>\r\n        <h2>\r\n          <Link to=\"/\">Where in the World?</Link>\r\n        </h2>\r\n\r\n        <NavigationWrapper>\r\n          <IconContext.Provider value={{ size: \"1.2rem\" }}>\r\n            {theme ? (\r\n              <FiMoon onClick={changeTheme} />\r\n            ) : (\r\n              <FiSun onClick={changeTheme} />\r\n            )}\r\n          </IconContext.Provider>\r\n\r\n          <Span>{theme ? \"Dark mode\" : \"Light mode\"}</Span>\r\n        </NavigationWrapper>\r\n      </Navigation>\r\n    </StyledHeader>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { HomeScreen } from \"../pages/home/HomeScreen\";\r\nimport { DetailScreen } from \"../pages/detail/DetailScreen\";\r\nimport { Header } from \"../components/Header\";\r\n\r\nexport const AppRouter = ({ theme, handleThemeChange }) => {\r\n  return (\r\n    <Router>\r\n      <Header theme={theme} changeTheme={handleThemeChange} />\r\n\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/detail/:countryName\" component={DetailScreen} />\r\n\r\n          <Route path=\"/\" component={HomeScreen} />\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-size: 14px;\r\n    height: 100%;\r\n    font-family: 'Nunito Sans', sans-serif;\r\n    transition: all 0.35s linear;\r\n    \r\n    background-color: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n\r\nmain{\r\n    margin: 1rem;\r\n\r\n    @media (min-width: 64rem){\r\n        margin: 2rem 3rem;\r\n    }\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n}\r\n\r\nimg{\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\n`\r\n","export const lightTheme = {\r\n  text: \"#111517\",\r\n  input: \"#858585\",\r\n  background: \"#fafafa\",\r\n  elements: \"#ffffff\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  text: \"#ffffff\",\r\n  input: \"#858585\",\r\n  background: \"#202c37\",\r\n  elements: \"#2b3945\",\r\n};\r\n","export const getMatchedCountries = (state, payload) =>\r\n  state.countriesList.filter(({ name }) =>\r\n    name.toLowerCase().includes(payload.search.toLowerCase())\r\n  );\r\n\r\nexport const filterByRegion = (state, payload) =>\r\n  state.countriesList.filter(({ region }) => region === payload.regionSelected);\r\n","import { types } from \"./types\";\r\n\r\nimport { filterByRegion, getMatchedCountries } from \"./countriesActions\";\r\n\r\nexport const countriesReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case types.setCountryList:\r\n      return { ...state, countriesList: payload, countriesToShow: payload };\r\n\r\n    case types.setRegion:\r\n      return { ...state, countriesToShow: filterByRegion(state, payload) };\r\n\r\n    case types.setSearchCountry:\r\n      return { ...state, countriesToShow: getMatchedCountries(state, payload) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./css/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"./css/themes\";\r\n\r\nimport { useDarkMode } from \"./hooks/useDarkMode\";\r\n\r\nimport { countriesReducer } from \"./context/countriesReducer\";\r\nimport { CountriesContext } from \"./context/CountriesContext\";\r\n\r\nconst initialState = {\r\n  countriesList: [],\r\n  countriesToShow: [],\r\n};\r\n\r\nexport const App = () => {\r\n  const [countries, dispatch] = useReducer(countriesReducer, initialState);\r\n\r\n  const { theme, handleThemeChange } = useDarkMode();\r\n\r\n  return (\r\n    <CountriesContext.Provider value={{ countries, dispatch }}>\r\n      <ThemeProvider theme={theme ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n\r\n        <AppRouter theme={theme} handleThemeChange={handleThemeChange} />\r\n      </ThemeProvider>\r\n    </CountriesContext.Provider>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const isDarkModeEnabled =\r\n    localStorage.getItem(\"theme\") === \"false\" ? false : true;\r\n\r\n  const [theme, setTheme] = useState(isDarkModeEnabled);\r\n\r\n  const handleThemeChange = () => setTheme(!theme);\r\n\r\n  useEffect(() => localStorage.setItem(\"theme\", theme), [theme]);\r\n\r\n  return {\r\n    theme,\r\n    handleThemeChange,\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["css/globalStyles.js","css/themes.js","hooks/useFetch.js","components/CountryCard/styles.js","components/CardInfo/index.jsx","components/CountryCard/index.jsx","components/CountryGrid/styles.js","components/CountryGrid/index.jsx","components/RegionOption/index.jsx","css/components.js","components/RegionFilter/styles.js","components/RegionFilter/index.jsx","components/SearchBar/styles.js","components/SearchBar/index.jsx","pages/home/HomeScreen.jsx","hooks/useStorage.js","pages/detail/DetailScreen.jsx","components/Header/styles.js","components/Header/index.jsx","routers/AppRouter.jsx","hooks/useDarkMode.js","pages/app/App.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","background","text","lightTheme","input","elements","darkTheme","useFetch","url","Error","useState","data","isLoading","dataStore","setDataStore","useEffect","a","fetch","res","json","Card","styled","article","CardContent","div","CardInfo","title","CountryCard","flag","name","population","region","capital","to","src","alt","Grid","section","CountryGrid","map","country","RegionOption","value","attr","FlexWrapper","Container","Border","Controller","SelectBorder","Select","RegionFilter","setRegion","as","onChange","target","disabled","defaultValue","Section","InputBorder","Input","Mover","SearchBar","memo","setDataToShow","setCountry","encodeURI","console","log","Provider","size","autoComplete","placeholder","e","HomeScreen","key","initialValue","localStorage","getItem","error","storedValue","setStoredValue","setItem","useStorage","dataToShow","DetailScreen","history","StyledHeader","header","Navigation","nav","NavigationWrapper","Span","span","Header","changeTheme","onClick","AppRouter","isDarkModeEnabled","setTheme","handleThemeChange","useDarkMode","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89476b29.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-size: 14px;\r\n    height: 100%;\r\n    font-family: 'Nunito Sans', sans-serif;\r\n    transition: all 0.35s linear;\r\n    \r\n    background-color: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n\r\nmain{\r\n    margin: 1rem;\r\n\r\n    @media (min-width: 64rem){\r\n        margin: 2rem 3rem;\r\n    }\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n\r\n    color: ${({ theme }) => theme.text};\r\n}\r\n}\r\n\r\nimg{\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\n`\r\n","export const lightTheme = {\r\n  text: \"#111517\",\r\n  input: \"#858585\",\r\n  background: \"#fafafa\",\r\n  elements: \"#ffffff\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  text: \"#ffffff\",\r\n  input: \"#858585\",\r\n  background: \"#202c37\",\r\n  elements: \"#2b3945\",\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  if (!url) throw Error(\"Url is required\");\r\n\r\n  const [dataStore, setDataStore] = useState({\r\n    data: null,\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n\r\n\r\n\r\n      setDataStore({\r\n        data: [...data],\r\n        isLoading: false,\r\n      });\r\n    })();\r\n  }, [url]);\r\n\r\n  return dataStore;\r\n};\r\n\r\n/*\r\nflag\r\n\r\nname: \"American Samoa\r\n\r\npopulation: 57100\r\nregion: \"Oceania\"\r\ncapital: \"Pago Pago\"\r\n\r\n\r\ndetails page :\r\n\r\nnativeName: \"American Samoa\"\r\nsubregion: \"Polynesia\"\r\ntopLevelDomain: [\".as\"]\r\ncurrencies: Array.code\r\nlanguages: Array.name\r\nborders: [\"IDN\"]\r\n*/\r\n","import styled from \"styled-components\";\r\n\r\nexport const Card = styled.article`\r\n  max-width: 18.75rem;\r\n  min-height: 25rem;\r\n  border-radius: 0.35rem;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\r\n  overflow: hidden;\r\n\r\n  p {\r\n    margin: 0.5rem 0;\r\n  }\r\n\r\n  h3 {\r\n    margin: 1rem 0;\r\n  }\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 1.5rem 1rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const CardInfo = ({ title, data }) => (\r\n  <p>\r\n    <b>{title}:</b> {data}\r\n  </p>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent } from \"./styles\";\r\n\r\nimport { CardInfo } from \"../CardInfo\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CountryCard = ({ flag, name, population, region, capital }) => {\r\n  return (\r\n    <Link to={`/detail/${name}`}>\r\n      <Card>\r\n        <img src={flag} alt={name} />\r\n\r\n        <CardContent>\r\n          <h3>{name}</h3>\r\n\r\n          <CardInfo title=\"Population\" data={population} />\r\n          <CardInfo title=\"Region\" data={region} />\r\n          <CardInfo title=\"Capital\" data={capital} />\r\n        </CardContent>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 2rem 1rem;\r\n\r\n  @media (min-width: 64rem) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  @media (min-width: 47.5rem) and (max-width: 64rem) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (min-width: 31.25rem) and (max-width: 47.5rem) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CountryCard } from \"../CountryCard\";\r\n\r\nimport { Grid } from \"./styles\";\r\n\r\nexport const CountryGrid = ({ data }) => {\r\n  return (\r\n    <Grid>\r\n      {data !== null &&\r\n        data.map((country) => (\r\n          <CountryCard key={country.name} {...country} />\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const RegionOption = ({ value, ...attr }) => (\r\n  <option {...attr} value={value}>\r\n    {value}\r\n  </option>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 2rem 0;\r\n\r\n  @media (min-width: 64rem) {\r\n    margin: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const Border = styled.div`\r\n  padding: 0.35rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.elements};\r\n`;\r\n\r\nexport const Controller = styled.input`\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  background-color: ${({ theme }) => theme.background};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const SelectBorder = styled(Border)`\r\n  max-width: 9.5rem;\r\n  padding: 0.2rem;\r\n\r\n  @media (min-width: 40rem) {\r\n    max-width: 15rem;\r\n  }\r\n`;\r\n\r\nexport const Select = styled(Controller)`\r\n  cursor: pointer;\r\n  appearance: none;\r\n  line-height: 1.2;\r\n  padding: 0.75rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { RegionOption } from \"../RegionOption\";\r\n\r\nimport { Container } from \"../../css/components\";\r\nimport { SelectBorder, Select } from \"./styles\";\r\n\r\nexport const RegionFilter = ({ setRegion }) => (\r\n  <Container>\r\n    <SelectBorder>\r\n      <Select as=\"select\" onChange={({ target }) => setRegion(target.value)}>\r\n        <option disabled defaultValue>\r\n          Filter by Region\r\n        </option>\r\n\r\n        <RegionOption value=\"africa\" />\r\n\r\n        <RegionOption value=\"americas\" />\r\n\r\n        <RegionOption value=\"asia\" />\r\n\r\n        <RegionOption value=\"europe\" />\r\n\r\n        <RegionOption value=\"oceania\" />\r\n      </Select>\r\n    </SelectBorder>\r\n  </Container>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { Border, Controller } from \"../../css/components\";\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const InputBorder = styled(Border)`\r\n  @media (min-width: 40rem) {\r\n    max-width: 25rem;\r\n  }\r\n`;\r\n\r\nexport const Input = styled(Controller)`\r\n  padding: 1rem 0 1rem 3.5rem;\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nexport const Mover = styled.div`\r\n  position: absolute;\r\n  top: 1.25rem;\r\n  left: 1.5rem;\r\n`;\r\n","import React, { useState, memo } from \"react\";\r\n\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { HiSearch } from \"react-icons/hi\";\r\n\r\nimport { Section, Input, Mover, InputBorder } from \"./styles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\nexport const SearchBar = memo(({ setDataToShow }) => {\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const { data, isLoading } = useFetch(\r\n    `https://restcountries.eu/rest/v2/name/${encodeURI(country)}`\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  const handleChange = (e) => {\r\n    setCountry(e.target.value);\r\n\r\n    if (!isLoading) setDataToShow(data);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Mover>\r\n        <IconContext.Provider value={{ size: \"1.3rem\" }}>\r\n          <HiSearch />\r\n        </IconContext.Provider>\r\n      </Mover>\r\n\r\n      <InputBorder>\r\n        <Input\r\n          autoComplete=\"no\"\r\n          placeholder=\"Search for a country...\"\r\n          onChange={handleChange}\r\n        />\r\n      </InputBorder>\r\n    </Section>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useStorage } from \"../../hooks/useStorage\";\r\n\r\nimport { CountryGrid } from \"../../components/CountryGrid\";\r\nimport { RegionFilter } from \"../../components/RegionFilter\";\r\nimport { SearchBar } from \"../../components/SearchBar\";\r\n\r\nexport const HomeScreen = () => {\r\n  const [region, setRegion] = useStorage(\"region\", \"africa\");\r\n\r\n  const { data, isLoading } = useFetch(\r\n    `https://restcountries.eu/rest/v2/region/${encodeURI(region)}`\r\n  );\r\n\r\n  const [dataToShow, setDataToShow] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setDataToShow(data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar setDataToShow={setDataToShow} />\r\n      <RegionFilter setRegion={setRegion} />\r\n\r\n      <CountryGrid data={dataToShow} isLoading={isLoading} />\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n\r\n      return item ? item : initialValue;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      setStoredValue(value);\r\n\r\n      localStorage.setItem(key, value);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DetailScreen = ({history}) => {\r\n  return (\r\n    <div>\r\n      <h1>Detail Screen</h1>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { FlexWrapper } from \"../../css/components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  padding: 0.75rem;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n\r\n  @media (min-width: 40rem) {\r\n    padding: 1.5rem 3rem;\r\n  }\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavigationWrapper = styled(FlexWrapper)`\r\n  align-items: center;\r\n  & * {\r\n    margin: 0 0.35rem;\r\n  }\r\n\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: 62.5rem) {\r\n    & * {\r\n      margin: 0 0.75rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 21rem) {\r\n    span {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-weight: 600;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledHeader, Navigation, NavigationWrapper, Span } from \"./styles\";\r\n\r\nimport { FiMoon, FiSun } from \"react-icons/fi\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nexport const Header = ({ changeTheme, theme }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <Navigation>\r\n        <h2>\r\n          <Link to=\"/\">Where in the World?</Link>\r\n        </h2>\r\n\r\n        <NavigationWrapper>\r\n          <IconContext.Provider value={{ size: \"1.2rem\" }}>\r\n            {theme ? (\r\n              <FiMoon onClick={changeTheme} />\r\n            ) : (\r\n              <FiSun onClick={changeTheme} />\r\n            )}\r\n          </IconContext.Provider>\r\n\r\n          <Span>{theme ? \"Dark mode\" : \"Light mode\"}</Span>\r\n        </NavigationWrapper>\r\n      </Navigation>\r\n    </StyledHeader>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"../css/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"../css/themes\";\r\n\r\nimport { HomeScreen } from \"../pages/home/HomeScreen\";\r\nimport { DetailScreen } from \"../pages/detail/DetailScreen\";\r\nimport { Header } from \"../components/Header\";\r\n\r\nimport { useDarkMode } from \"../hooks/useDarkMode\";\r\n\r\nexport const AppRouter = () => {\r\n  const { theme, handleThemeChange } = useDarkMode();\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <Header theme={theme} changeTheme={handleThemeChange} />\r\n\r\n        <main>\r\n          <Switch>\r\n            <Route exact path=\"/detail/:countryId\" component={DetailScreen} />\r\n\r\n            <Route  path=\"/\" component={HomeScreen} />\r\n          </Switch>\r\n        </main>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const isDarkModeEnabled =\r\n    localStorage.getItem(\"theme\") === \"false\" ? false : true;\r\n\r\n  const [theme, setTheme] = useState(isDarkModeEnabled);\r\n\r\n  const handleThemeChange = () => setTheme(!theme);\r\n\r\n  useEffect(() => localStorage.setItem(\"theme\", theme), [theme]);\r\n\r\n  return {\r\n    theme,\r\n    handleThemeChange,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport { AppRouter } from \"../../routers/AppRouter\";\r\n\r\nexport const App = () => <AppRouter />;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./pages/app/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}